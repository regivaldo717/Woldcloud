redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive\github\Dados_em_texto\R", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/R", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/R", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
install.packages('NLP')
install.packages('tm')
library(NLP)
library(tm)
getSources()
getReaders()
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/R", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
inspect(redac)
stopwords('portuguese')
tdm<- TermDocumentMatrix(redac)
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz)
View(mtz)
#pre-processamento
redac<- tm_map(redac, removeWords,stopwords('portuguese')) # palavras relativamente desnecessárias descartadas
redac<- tm_map(redac, stripWhitespace) # remoção de espaços
redac<- tm_map(redac, removePunctuation) # remoção da pontuação
redac<- tm_map(redac, removeNumbers) #remoção de números
redac<- tm_map(redac, content_transformer(tolower)) #transformação de todos as letras em minúsculas
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz)
View(mtz)
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/R", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
inspect(redac)
stopwords('portuguese')
#pre-processamento
redac<- tm_map(redac, removeWords,stopwords('portuguese')) # palavras relativamente desnecessárias descartadas
redac<- tm_map(redac, stripWhitespace) # remoção de espaços
redac<- tm_map(redac, removePunctuation) # remoção da pontuação
redac<- tm_map(redac, removeNumbers) #remoção de números
redac<- tm_map(redac, content_transformer(tolower)) #transformação de todos as letras em minúsculas
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz)
View(mtz)
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
inspect(redac)
stopwords('portuguese')
#pre-processamento
redac<- tm_map(redac, removeWords,stopwords('portuguese')) # palavras relativamente desnecessárias descartadas
redac<- tm_map(redac, stripWhitespace) # remoção de espaços
redac<- tm_map(redac, removePunctuation) # remoção da pontuação
redac<- tm_map(redac, removeNumbers) #remoção de números
redac<- tm_map(redac, content_transformer(tolower)) #transformação de todos as letras em minúsculas
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz)
View(mtz)
org<- sort(rowSums(mtz), decreasing = TRUE)
df<- data.frame(word = names(v),freq=v)
org<- sort(rowSums(mtz), decreasing = TRUE)
df<- data.frame(word = names(org),freq=org)
mtz<- as.matrix(doc_mtz) #transformação em matriz para melhorar averiguação
View(mtz)
org<- sort(rowSums(mtz), decreasing = TRUE)
df<- data.frame(word = names(org),freq=org)
head (d,50)
head (df,50)
head (df,10)
#pre-processamento
redac<- tm_map(redac, removeWords,stopwords('portuguese')) # palavras relativamente desnecessárias descartadas
redac<- tm_map(redac, stripWhitespace) # remoção de espaços
redac<- tm_map(redac, removePunctuation) # remoção da pontuação
redac<- tm_map(redac, removeNumbers) #remoção de números
redac<- tm_map(redac, content_transformer(tolower)) #transformação de todos as letras em minúsculas
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz) #transformação em matriz para melhorar averiguação
org<- sort(rowSums(mtz), decreasing = TRUE)
df<- data.frame(word = names(org),freq=org)
head (df,10)
library(RColorBrewer)
library(wordcloud)
library(wordcloud2)
redac<- tm_map(redac, removePunctuation) # remoção da pontuação
redac<- tm_map(redac, removeNumbers) #remoção de números
redac<- tm_map(redac, content_transformer(tolower)) #transformação de todos as letras em minúsculas
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz) #transformação em matriz para melhorar averiguação
View(mtz) #vizualização
org<- sort(rowSums(mtz), decreasing = TRUE)
df<- data.frame(word = names(org),freq=org)
head (df,10) # visualização das 10 palavras mais frequentes
plot.default(df)
plot.(df)
plot.(df)
plot(df)
unique(df)
table(df)
df
head (df,10) # visualização das 10 palavras mais frequentes
library(RColorBrewer)
library(wordcloud)
install.packages('wordcloud2-shiny')
detach("package:wordcloud2", unload = TRUE)
library(wordcloud2)
install.packages('wordcloud2')
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(df)
inspect(redac)
stopwords('portuguese')
inspect(redac)
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
library(NLP)
library(tm)
library(wordcloud2)
getSources()
getReaders()
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/Dados_em_texto/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
inspect(redac)
stopwords('portuguese')
#pre-processamento
redac<- tm_map(redac, removeWords,stopwords('portuguese')) # palavras relativamente desnecessárias descartadas
redac<- tm_map(redac, stripWhitespace) # remoção de espaços
redac<- tm_map(redac, removePunctuation) # remoção da pontuação
redac<- tm_map(redac, removeNumbers) #remoção de números
redac<- tm_map(redac, content_transformer(tolower)) #transformação de todos as letras em minúsculas
doc_mtz<- TermDocumentMatrix(redac) #Constrói ou força uma matriz de documento
mtz<- as.matrix(doc_mtz) #transformação em matriz para melhorar averiguação
View(mtz) #vizualização
org<- sort(rowSums(mtz), decreasing = TRUE) #Objeto 'org' é criado para vizualização em  ordem decrescente
df<- data.frame(word = names(org),freq=org) #dataframe para vizualização
head (df,10) # visualização das 10 palavras mais frequentes
wordcloud2(df) #elaboração da nuvem de palavras
set.seed(2)
wordcloud2(df) #elaboração da nuvem de palavras
wordcloud2(df) #elaboração da nuvem de palavras
wordcloud2(df) #elaboração da nuvem de palavras
wordcloud2(df) #elaboração da nuvem de palavras
set.seed(3)
wordcloud2(df) #elaboração da nuvem de palavras
wordcloud2(df) #elaboração da nuvem de palavras
set.seed(3)
wordcloud2(df) #elaboração da nuvem de palavras
set.seed(3)
wordcloud2(df) #elaboração da nuvem de palavras
set.seed(300)
wordcloud2(df) #elaboração da nuvem de palavras
getSources()
getReaders()
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/palavras/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
library(NLP)
library(tm)
library(wordcloud2)
getSources()
getReaders()
redac<- VCorpus(DirSource("C:/Users/baixi/OneDrive/github/palavras/textos", encoding="UTF-8"),readerControl = list(reader=readPlain,language='por') )
inspect(redac)
stopwords('portuguese')
wordcloud2(df, backgroundColor = 'green') #elaboração da nuvem de palavras
wordcloud2(df, backgroundColor = '#123454') #elaboração da nuvem de palavras
wordcloud2(df, backgroundColor = '#ff34ff') #elaboração da nuvem de palavras
wordcloud2(df, backgroundColor = '#ff3fff') #elaboração da nuvem de palavras
wordcloud2(df, backgroundColor = '#ffafff') #elaboração da nuvem de palavras
wordcloud2(df, backgroundColor = '#ffbfff') #elaboração da nuvem de palavras
wordcloud2(df, backgroundColor = '#ffdfff') #elaboração da nuvem de palavras
wordcloud2(help)
wordcloud2(help)
# mineração de dados Tweeter
install.packages('rtweet','wordcloud2','tm')
library(wordcloud2)
library(tb)
library(cluster)
library(cluster)
library(fpc)
library(fpc)
# mineração de dados Tweeter
install.packages('rtweet','wordcloud2','tm','fpc')
install.packages('fpc')
library(wordcloud2)
library(tb)
library(RColorBrewer)
library(cluster)
library(fpc)
library(tb)
install.packages('tb')
